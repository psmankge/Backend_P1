<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>SITA | eRecruitment</title>
    <!-- Tell the browser to be responsive to screen width -->
    <meta content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" name="viewport">
    <!-- jQuery 3 -->
    <script src="~/Content/bower_components/jquery/dist/jquery.min.js"></script>
    <!-- Bootstrap 3.3.7 -->
    <link rel="stylesheet" href="~/Content/bower_components/bootstrap/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="~/Content/bower_components/select2/dist/css/select2.min.css">
    <link href="~/Content/plugins/bootstrap-multiselect/bootstrap-multiselect.css" rel="stylesheet" />
    <link href="~/Content/plugins/bootstrap-datepicker/bootstrap-datepicker.css" rel="stylesheet" />
    <!-- Font Awesome -->
    <link rel="stylesheet" href="~/Content/bower_components/font-awesome/css/font-awesome.min.css">
    <!-- Ionicons -->
    <link rel="stylesheet" href="~/Content/bower_components/Ionicons/css/ionicons.min.css">
    <!-- Theme style -->
    <link rel="stylesheet" href="~/Content/dist/css/AdminLTE.min.css">
    <!-- AdminLTE Skins. Choose a skin from the css/skins
         folder instead of downloading all of them to reduce the load. -->
    <link rel="stylesheet" href="~/Content/dist/css/skins/_all-skins.min.css">
    <!-- Morris chart -->
    <link rel="stylesheet" href="~/Content/bower_components/morris.js/morris.css">
    <!-- jvectormap -->
    <link rel="stylesheet" href="~/Content/bower_components/jvectormap/jquery-jvectormap.css">
    <!-- Date Picker -->
    <link rel="stylesheet" href="~/Content/bower_components/bootstrap-datepicker/dist/css/bootstrap-datepicker.min.css">
    <!-- Daterange picker -->
    <link rel="stylesheet" href="~/Content/bower_components/bootstrap-daterangepicker/daterangepicker.css">
    <!-- bootstrap wysihtml5 - text editor -->
    <link rel="stylesheet" href="~/Content/plugins/bootstrap-wysihtml5/bootstrap3-wysihtml5.min.css">
    <link rel="stylesheet" href="~/Content/bower_components/datatables.net-bs/css/dataTables.bootstrap.min.css">
    <link rel="stylesheet" href="~/Content/Site.css" />

    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <!-- Google Font -->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,600,700,300italic,400italic,600italic">
    <style>

        .example-modal .modal {
            position: relative;
            top: auto;
            bottom: auto;
            right: auto;
            left: auto;
            display: block;
            z-index: 1;
        }

        .example-modal .modal {
            background: transparent !important;
        }
    </style>

    @using System.Data.Linq
    @using Microsoft.AspNet.Identity
    @using eRecruitment.Sita.BackEnd.Enumeration
    @using eRecruitment.Sita.BackEnd.Generics

    @{
        eRecruitment.BusinessDomain.DAL.DataAccess _dal = new eRecruitment.BusinessDomain.DAL.DataAccess();
        eRecruitment.Sita.BackEnd.App_Data.Entities.DAL.eRecruitmentDataClassesDataContext _db =
            new eRecruitment.Sita.BackEnd.App_Data.Entities.DAL.eRecruitmentDataClassesDataContext();

        //int optid = Convert.ToInt16(Session["sip"]);
        int optid = 2;

        var usermenu = (dynamic)null;
        if (Request.IsAuthenticated)
        {
            usermenu = eRecruitment.Sita.BackEnd.Generics.UserMenuItems.GetUserMenuList(User.Identity.GetUserId());
        }
        else
        {
            //usermenu = "4";
        }

    }

</head>
<body class="hold-transition skin-blue sidebar-mini">
    <div class="row">
        <div class="col-xs-4 col-md-2">
            <div class="form-group">
                <div class="image">
                    <img src="~/Content/Images/SITALogo.PNG" height="110" width="150" />
                </div>
            </div>
        </div>

        @*<div class="col-xs-4 col-md-2 col-md-push-3">
                <div class="form-group">
                    <div class="image pull-center">
                        <img src="~/Content/Images/SITALogo.PNG" height="110" width="200"/>
                    </div>
                </div>
            </div>*@

        <div class="col-xs-6 col-md-6 col-md-push-4">
            <div class="form-group">
                <div class="image pull-right">
                    <img src="~/Content/Images/SAFlag.png" height="100" width="125">
                </div>
            </div>
        </div>

    </div>
    <div class="wrapper">
        <header class="main-header">
            <!-- Logo -->
            <a href="#" class="logo">
                <!-- mini logo for sidebar mini 50x50 pixels -->
                <span class="logo-mini"><b>eRecruitment</b>Jobs</span>
                <!-- logo for regular state and mobile devices -->
                <span class="logo-lg"><b>E-</b>Recruitment</span>
            </a>
            <!-- Header Navbar: style can be found in header.less -->
            <nav class="navbar navbar-static-top">
                <!-- Sidebar toggle button-->
                <a href="#" class="sidebar-toggle" data-toggle="push-menu" role="button">
                    <span class="sr-only">Toggle navigation</span>
                </a>
                <div class="navbar-custom-menu">
                    <ul class="nav navbar-nav">
                        <!-- Messages: style can be found in dropdown.less-->
                        <li class="dropdown messages-menu disabled">
                            @*<a href="#" class="dropdown-toggle" data-toggle="dropdown">
                                    <i class="fa fa-envelope-o"></i>
                                    <span class="label label-success">4</span>
                                </a>*@
                            <ul class="dropdown-menu disabled">
                                @*<li class="header disabled">You have 4 messages</li>*@
                                @*<li>
                                        <ul class="menu disabled">
                                            <li class="disabled">
                                                <a href="#">
                                                    <div class="pull-left">
                                                        <img src="~/Content/dist/img/user3-128x128.jpg" class="img-circle" alt="User Image">
                                                    </div>
                                                    <h4>
                                                        Sales Department
                                                        <small><i class="fa fa-clock-o"></i> Yesterday</small>
                                                    </h4>
                                                    <p>Why not buy a new awesome theme?</p>
                                                </a>
                                            </li>
                                        </ul>
                                    </li>*@
                                @*<li class="footer disabled"><a href="#">See All Messages</a></li>*@
                            </ul>
                        </li>

                        <!-- User Account: style can be found in dropdown.less -->
                        <li class="dropdown user user-menu">
                            <a href="#" class="dropdown-toggle" data-toggle="dropdown">
                                <img src="~/Content/Images/Human Avatar.png" class="user-image" alt="User Image">
                                @if (Request.IsAuthenticated)

                                {
                                    string Fullname = null;
                                    string uid = User.Identity.GetUserId();
                                    var data = _db.tblProfiles.Where(x => x.UserID == uid).FirstOrDefault();
                                    if (data != null)
                                    {
                                        Fullname = string.Format("{0}", data.FirstName);
                                    }

                                    <span class="hidden-xs"> @Fullname</span>

                                }

                            </a>
                        </li>
                        @*<li>
                                <a href="~/OnlineHelp/SITA-Official/story_html5.html" target="_blank">Online Help</a>
                            </li>*@
                        <li class="dropdown user user-menu">
                            <a href='@Url.Action("LogOff", "Home")'>
                                <i class="fa fa-sign-out"></i>
                                <span> Log Off </span>
                            </a>
                        </li>
                        <li>&nbsp;</li>
                    </ul>
                </div>
            </nav>
        </header>
        <!-- Left side column. contains the logo and sidebar -->
        <aside class="main-sidebar">
            <!-- sidebar: style can be found in sidebar.less -->
            <section class="sidebar">
                <!-- sidebar menu: : style can be found in sidebar.less -->
                <ul class="sidebar-menu" data-widget="tree">
                    <li class="header">MAIN NAVIGATION </li>
                    <li class="active treeview">
                        @if (Request.IsAuthenticated && usermenu.Contains(Convert.ToString((int)eRecruitment.Sita.BackEnd.Enumeration.SystemMenu.Human_Resource_Center)))
                        {
                        <li class="active treeview">
                            <a href="#">
                                <i class="fa fa-laptop"></i>
                                <span>Human Resource Center</span>
                                <span class="pull-right-container">
                                    <i class="fa fa-angle-left pull-right"></i>
                                </span>
                            </a>
                            <ul class="treeview-menu">
                                @if (usermenu.Contains(Convert.ToString((int)eRecruitment.Sita.BackEnd.Enumeration.SystemMenu.Dashboard)))
                                {
                                    <li><a href="~/Vacancy/Dashboard"><i class="fa fa-dashboard"></i> Dashboard</a></li>
                                }
                                @if (usermenu.Contains(Convert.ToString((int)eRecruitment.Sita.BackEnd.Enumeration.SystemMenu.Manage_Vacancy)))
                                {
                                    <li><a href="~/Vacancy/VacancyList"><i class="fa fa-list"></i> Manage Vacancy</a></li>
                                }
                                @if (usermenu.Contains(Convert.ToString((int)eRecruitment.Sita.BackEnd.Enumeration.SystemMenu.Approve_Vacancy)))
                                {
                                    <li><a href="~/Vacancy/ApproveVacancy"><i class="fa fa-pencil-square-o"></i> Approve Vacancy</a></li>
                                }
                                @if (usermenu.Contains(Convert.ToString((int)eRecruitment.Sita.BackEnd.Enumeration.SystemMenu.View_Vacancy_Advert)))
                                {
                                    <li><a href="~/Vacancy/ViewVacancyAdList"><i class="fa fa-search"></i> View Vacancy Advert</a></li>
                                }
                                @if (usermenu.Contains(Convert.ToString((int)eRecruitment.Sita.BackEnd.Enumeration.SystemMenu.Candidate_Screening)))
                                {
                                    <li><a href="~/Vacancy/CandidateScreening"><i class="fa fa-sort-alpha-asc"></i> Candidate Screening</a></li>
                                }
                                @if (usermenu.Contains(Convert.ToString((int)eRecruitment.Sita.BackEnd.Enumeration.SystemMenu.Candidate_Profile)))
                                {
                                    <li><a href="@Url.Action("CandidateProfile", "Vacancy", new { id = 0 })"><i class="fa fa-odnoklassniki"></i> Candidate Profile</a></li>
                                }
                                @if (usermenu.Contains(Convert.ToString((int)eRecruitment.Sita.BackEnd.Enumeration.SystemMenu.Download_Candidate_CV)))
                                {
                                    <li><a href="@Url.Action("DownloadCandidateCV", "Vacancy")"><i class="fa fa-exchange"></i> Download Candidate CV</a></li>
                                }
                                @if (usermenu.Contains(Convert.ToString((int)eRecruitment.Sita.BackEnd.Enumeration.SystemMenu.Long_List)))
                                {
                                    <li><a href="@Url.Action("LongList", "LongList")"><i class="fa fa-file-text"></i> Long List</a></li>
                                }
                                @if (usermenu.Contains(Convert.ToString((int)eRecruitment.Sita.BackEnd.Enumeration.SystemMenu.Short_List)))
                                {
                                    <li><a href="@Url.Action("ShortList", "ShortList")"><i class="fa fa-file-text"></i> Short List</a></li>
                                }
                                @if (usermenu.Contains(Convert.ToString((int)eRecruitment.Sita.BackEnd.Enumeration.SystemMenu.Short_Listed_Candidates)))
                                {
                                    <li><a href="@Url.Action("ShortListed", "ShortList")"><i class="fa fa-file-text"></i> Short Listed Candidates</a></li>
                                }
                                @if (usermenu.Contains(Convert.ToString((int)eRecruitment.Sita.BackEnd.Enumeration.SystemMenu.Panel_Selection)))
                                {
                                    <li><a href="@Url.Action("PanelSelection", "Panel", new { type = "Recruiter" })"><i class="fa fa-pagelines"></i> Panel Selection</a></li>
                                }

                                @if (Request.IsAuthenticated && User.IsInRole("Recruiter"))
                                {
                                    <li>
                                        <a href="~/OnlineHelp/Official-Recruiter/story_html5.html" target="_blank"><i class="fa fa-question-circle"></i>Online Help</a>
                                    </li>
                                }
                                @if (Request.IsAuthenticated && User.IsInRole("Recruiter Admin"))
                                {
                                    <li>
                                        <a href="~/OnlineHelp/Official-RecruitAdmin/story_html5.html" target="_blank"><i class="fa fa-question-circle"></i>Online Help</a>
                                    </li>
                                }
                                @if (Request.IsAuthenticated && User.IsInRole("Approver"))
                                {
                                    <li>
                                        <a href="~/OnlineHelp/Official-Approver/story_html5.html" target="_blank"><i class="fa fa-question-circle"></i>Online Help</a>
                                    </li>
                                }
                                @*<li><a href="~/Vacancy/VacancyList"><i class="fa fa-circle-o"></i> Manage Vacancy</a></li>*@



                            </ul>
                        </li>
                    }
                        <li class="active treeview">

                            @if (Request.IsAuthenticated && usermenu.Contains(Convert.ToString((int)eRecruitment.Sita.BackEnd.Enumeration.SystemMenu.Administration)))
                            {
                                string UserID = User.Identity.GetUserId();
                                var data = _dal.GetOrganisationName(UserID);

                            <li class="active treeview">

                                <a href="#">
                                    <i class="fa fa-wrench"></i> <span>Administration</span>
                                    <span class="pull-right-container">
                                        <i class="fa fa-angle-left pull-right"></i>
                                    </span>
                                </a>

                                <ul class="treeview-menu">
                                    @if (usermenu.Contains(Convert.ToString((int)eRecruitment.Sita.BackEnd.Enumeration.SystemMenu.Dashboard)))
                                    {
                                        <li><a href="~/Admin/SysAdminDashboard"><i class="fa fa-dashboard"></i> Dashboard</a></li>
                                    }
                                    @if (usermenu.Contains(Convert.ToString((int)eRecruitment.Sita.BackEnd.Enumeration.SystemMenu.Manage_Users)))
                                    {
                                        <li><a href="~/Admin/Index"><i class="fa fa-users"></i> Manage Users</a></li>
                                    }
                                    @if (usermenu.Contains(Convert.ToString((int)eRecruitment.Sita.BackEnd.Enumeration.SystemMenu.Manage_Role_Functions)))
                                    {
                                        <li><a href="~/Function/RoleMenuItems"><i class="fa fa-cogs"></i> Manage Role Functions</a></li>
                                    }
                                    @if (usermenu.Contains(Convert.ToString((int)eRecruitment.Sita.BackEnd.Enumeration.SystemMenu.Manage_Roles)))
                                    {
                                        <li>
                                            <a href="~/Admin/ManageRoles">
                                                <i class="fa fa-wrench"></i> <span>Manage Roles</span>
                                            </a>
                                        </li>
                                    }
                                    @if (data.OrganisationID == 1 || data.OrganisationName.TrimEnd() == "State Information Technology Agency")
                                    {
                                        if (usermenu.Contains(Convert.ToString((int)eRecruitment.Sita.BackEnd.Enumeration.SystemMenu.Organisations)))
                                        {
                                            <li><a href="~/Admin/Organisation"><i class="fa fa-building-o"></i>Organisations</a></li>
                                        }
                                    }

                                    @if (usermenu.Contains(Convert.ToString((int)eRecruitment.Sita.BackEnd.Enumeration.SystemMenu.Divisions)))
                                    {
                                        <li class="active"><a href="~/Admin/DivisionList"><i class="fa fa-circle-o"></i>Divisions</a></li>
                                    }
                                    @if (usermenu.Contains(Convert.ToString((int)eRecruitment.Sita.BackEnd.Enumeration.SystemMenu.Departments)))
                                    {
                                        <li><a href="~/Admin/DepartmentList"><i class="fa fa-object-group"></i>Departments</a></li>
                                    }
                                    @if (usermenu.Contains(Convert.ToString((int)eRecruitment.Sita.BackEnd.Enumeration.SystemMenu.Job_Level)))
                                    {
                                        <li><a href="~/Admin/JobLevelList"><i class="fa  fa-money"></i>Job Level</a></li>
                                    }
                                    @if (usermenu.Contains(Convert.ToString((int)eRecruitment.Sita.BackEnd.Enumeration.SystemMenu.Job_Title)))
                                    {
                                        <li><a href="~/Admin/JobTitleList"><i class="fa  fa-level-up"></i>Job Title</a></li>
                                    }

                                    @if (usermenu.Contains(Convert.ToString((int)eRecruitment.Sita.BackEnd.Enumeration.SystemMenu.Salary_Category)))
                                    {
                                        <li><a href="~/Admin/SalaryCategoryList"><i class="fa fa-money"></i>Salary Category</a></li>
                                    }
                                    @if (usermenu.Contains(Convert.ToString((int)eRecruitment.Sita.BackEnd.Enumeration.SystemMenu.Salary_Sub_Category)))
                                    {
                                        <li><a href="~/Admin/SalarySubCategoryList"><i class="fa fa-money"></i>Salary Sub-Category</a></li>
                                    }
                                    @if (usermenu.Contains(Convert.ToString((int)eRecruitment.Sita.BackEnd.Enumeration.SystemMenu.Salary_Structure)))
                                    {
                                        <li><a href="~/Admin/SalaryStructureList"><i class="fa fa-money"></i>Salary Structure</a></li>
                                    }
                                    @if (usermenu.Contains(Convert.ToString((int)eRecruitment.Sita.BackEnd.Enumeration.SystemMenu.Technical_Competency)))
                                    {
                                        <li><a href="~/Admin/TechCompetencyList"><i class="fa fa fa-square"></i>Technical Competency</a></li>
                                    }
                                    @if (usermenu.Contains(Convert.ToString((int)eRecruitment.Sita.BackEnd.Enumeration.SystemMenu.Leadership_Competency)))
                                    {
                                        <li><a href="~/Admin/LeadCompetencyList"><i class="fa fa fa-square"></i>Leadership Competency</a></li>
                                    }
                                    @if (usermenu.Contains(Convert.ToString((int)eRecruitment.Sita.BackEnd.Enumeration.SystemMenu.Interpersonal_Behavioural_Competency)))
                                    {
                                        <li><a href="~/Admin/BehaveCompetencyList"><i class="fa fa fa-square"></i>Interpersonal / Behavioural<br />Competency</a></li>
                                    }
                                    @if (usermenu.Contains(Convert.ToString((int)eRecruitment.Sita.BackEnd.Enumeration.SystemMenu.Job_Profile)))
                                    {
                                        <li><a href="~/Admin/VacancyProfileList"><i class="fa fa-object-group"></i>Job Profile</a></li>
                                    }
                                    <li>
                                        <a href="~/OnlineHelp/Official-SystemAdmin/story_html5.html" target="_blank"><i class="fa fa-question-circle"></i>Online Help</a>
                                    </li>
                                </ul>
                            </li>
                        }

                            @if (Request.IsAuthenticated && usermenu.Contains(Convert.ToString((int)eRecruitment.Sita.BackEnd.Enumeration.SystemMenu.Master_List)))
                            {
                                <li class="active treeview">
                                    <a href="#">
                                        <i class="fa fa-wrench"></i> <span>Master List</span>
                                        <span class="pull-right-container">
                                            <i class="fa fa-angle-left pull-right"></i>
                                        </span>
                                    </a>
                                    <ul class="treeview-menu">
                                        @if (usermenu.Contains(Convert.ToString((int)eRecruitment.Sita.BackEnd.Enumeration.SystemMenu.Disability)))
                                        {
                                            <li><a href="~/Admin/DisabilityList"><i class="fa fa-wheelchair"></i>Disability</a></li>
                                        }
                                        @if (usermenu.Contains(Convert.ToString((int)eRecruitment.Sita.BackEnd.Enumeration.SystemMenu.Disclaimer)))
                                        {
                                            <li><a href="~/Admin/DisclamerList"><i class="fa fa-legal"></i> Disclaimer</a></li>
                                        }
                                        @if (usermenu.Contains(Convert.ToString((int)eRecruitment.Sita.BackEnd.Enumeration.SystemMenu.Employment_Type)))
                                        {
                                            <li><a href="~/Admin/EmploymentTypeList"><i class="fa  fa-square"></i>Employment Type</a></li>
                                        }
                                        @if (usermenu.Contains(Convert.ToString((int)eRecruitment.Sita.BackEnd.Enumeration.SystemMenu.General_Question)))
                                        {
                                            <li><a href="~/Admin/GeneralQuestionList"><i class="fa  fa-question"></i>General Question</a></li>
                                        }
                                        @if (usermenu.Contains(Convert.ToString((int)eRecruitment.Sita.BackEnd.Enumeration.SystemMenu.Interview_Catergory)))
                                        {
                                            <li><a href="~/Admin/InterviewCategoryList"><i class="fa fa-circle-o"></i>Interview Catergory</a></li>
                                        }
                                        @if (usermenu.Contains(Convert.ToString((int)eRecruitment.Sita.BackEnd.Enumeration.SystemMenu.Interview_Type)))
                                        {
                                            <li><a href="~/Admin/InterviewTypeList"><i class="fa  fa-tasks"></i>Interview Type</a></li>
                                        }
                                        @if (usermenu.Contains(Convert.ToString((int)eRecruitment.Sita.BackEnd.Enumeration.SystemMenu.Location)))
                                        {
                                            <li><a href="~/Admin/LocationList"><i class="fa fa-location-arrow"></i>Location</a></li>
                                        }
                                        @if (usermenu.Contains(Convert.ToString((int)eRecruitment.Sita.BackEnd.Enumeration.SystemMenu.Qualification_Type)))
                                        {
                                            <li><a href="~/Admin/QualificationTypeList"><i class="fa fa-question-circle"></i>Qualification Type</a></li>
                                        }
                                        @if (usermenu.Contains(Convert.ToString((int)eRecruitment.Sita.BackEnd.Enumeration.SystemMenu.Rejection_Reason)))
                                        {
                                            <li><a href="~/Admin/RejectionReasonsList"><i class="fa fa-file-text"></i>Rejection Reason</a></li>
                                        }
                                        @if (usermenu.Contains(Convert.ToString((int)eRecruitment.Sita.BackEnd.Enumeration.SystemMenu.Retract_Reasons)))
                                        {
                                            <li><a href="~/Admin/RetractReasonList"><i class="fa fa-exchange"></i>Retract Reasons</a></li>
                                        }
                                        @if (usermenu.Contains(Convert.ToString((int)eRecruitment.Sita.BackEnd.Enumeration.SystemMenu.Skills)))
                                        {
                                            <li><a href="~/Admin/SkillList"><i class="fa fa-file-text"></i>Skills</a></li>
                                        }
                                        @if (usermenu.Contains(Convert.ToString((int)eRecruitment.Sita.BackEnd.Enumeration.SystemMenu.Skills_Proficiency)))
                                        {
                                            <li><a href="~/Admin/SkillProficiencyList"><i class="fa fa-object-group"></i>Skills Proficiency</a></li>
                                        }
                                        @if (usermenu.Contains(Convert.ToString((int)eRecruitment.Sita.BackEnd.Enumeration.SystemMenu.Withdrawal_Reasons)))
                                        {
                                            <li><a href="~/Admin/WithdrawalReasonList"><i class="fa fa-exchange"></i>Withdrawal Reasons</a></li>
                                        }
                                    </ul>
                                </li>
                            }
                            @if (Request.IsAuthenticated && usermenu.Contains(Convert.ToString((int)eRecruitment.Sita.BackEnd.Enumeration.SystemMenu.Reports)))
                            {
                                <li class="active treeview">
                                    <a href="#">
                                        <i class="fa fa-list"></i> <span>Reports</span>
                                        <span class="pull-right-container">
                                            <i class="fa fa-angle-left pull-right"></i>
                                        </span>
                                    </a>
                                    <ul class="treeview-menu">
                                        @if (usermenu.Contains(Convert.ToString((int)eRecruitment.Sita.BackEnd.Enumeration.SystemMenu.Reports_Dashboard)))
                                        {
                                            <li><a href="~/Report/Index"><i class="fa fa-dashboard"></i>Reports Dashboard</a></li>
                                        }
                                    </ul>
                                </li>
                            }
                            @*<li><a href="~/Home/Blank"><i class="fa fa-circle-o text-aqua"></i> <span>Blank Page</span></a></li>*@
                        </ul>
                    </section>
                    <!-- /.sidebar -->
                </aside>
                @RenderBody()
                <!-- /.content-wrapper -->
                <footer class="main-footer">
                    <div class="pull-right hidden-xs">
                        <b>Version</b> 1.0.0
                    </div>
                    <strong>Copyright &copy; @DateTime.Now.Year &nbsp; Powered by <a href="https://www.sita.co.za"> SITA </a>.</strong>&nbsp; All rights reserved.
                </footer>

                <!-- Add the sidebar's background. This div must be placed
                 immediately after the control sidebar -->
                <div class="control-sidebar-bg"></div>
            </div>
            <!--Start Show Session Expire Warning Popup here -->
            <div class="modal fade" id="session-expire-warning-modal" aria-hidden="true" data-keyboard="false" data-backdrop="static" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h4 class="modal-title">Session Expire Warning</h4>
                        </div>
                        <div class="modal-body">
                            Your session will expire in <span id="seconds-timer"></span> seconds. Click Cancel to extend the session?
                        </div>
                        <div class="modal-footer">
                            @*<button id="btnOk" type="button" class="btn btn-default" style="padding: 6px 12px; margin-bottom: 0; font-size: 14px; font-weight: normal; border: 1px solid transparent; border-radius: 4px;  background-color: #428bca; color: #FFF;">Ok</button>*@
                            @*@Html.ActionLink("Cancel", "GoToPortal", "OTP", null, new { @class = "btn btn-default", @id = "btnCancel" })*@
                            <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                        </div>
                    </div>
                </div>
            </div>
            <!--End Show Session Expire Warning Popup here -->
            <!-- ./wrapper -->
            <!-- jQuery 3 -->
            <script src="~/Content/bower_components/jquery/dist/jquery.min.js"></script>
            <!-- Select2 -->
            <script src="~/Content/bower_components/select2/dist/js/select2.full.min.js"></script>
            <!-- jQuery UI 1.11.4 -->
            <script src="~/Content/bower_components/jquery-ui/jquery-ui.min.js"></script>
            <!-- Resolve conflict in jQuery UI tooltip with Bootstrap tooltip -->
            <script>$.widget.bridge('uibutton', $.ui.button);</script>
            <!-- Bootstrap 3.3.7 -->
            <script src="~/Content/bower_components/bootstrap/dist/js/bootstrap.min.js"></script>
            <script src="~/Content/plugins/bootstrap-multiselect/bootstrap-multiselect.min.js"></script>
            <script src="~/Content/plugins/bootstrap-datepicker/bootstrap-datepicker.min.js"></script>
            <!-- Morris.js charts -->
            <script src="~/Content/bower_components/raphael/raphael.min.js"></script>
            <script src="~/Content/bower_components/morris.js/morris.min.js"></script>
            <!-- Sparkline -->
            <script src="~/Content/bower_components/jquery-sparkline/dist/jquery.sparkline.min.js"></script>
            <!-- jvectormap -->
            <script src="~/Content/plugins/jvectormap/jquery-jvectormap-1.2.2.min.js"></script>
            <script src="~/Content/plugins/jvectormap/jquery-jvectormap-world-mill-en.js"></script>
            <!-- jQuery Knob Chart -->
            <script src="~/Content/bower_components/jquery-knob/dist/jquery.knob.min.js"></script>
            <!-- daterangepicker -->
            <script src="~/Content/bower_components/moment/min/moment.min.js"></script>
            <script src="~/Content/bower_components/bootstrap-daterangepicker/daterangepicker.js"></script>
            <!-- datepicker -->
            <script src="~/Content/bower_components/bootstrap-datepicker/dist/js/bootstrap-datepicker.min.js"></script>
            <!-- Bootstrap WYSIHTML5 -->
            <script src="~/Content/plugins/bootstrap-wysihtml5/bootstrap3-wysihtml5.all.min.js"></script>
            <!-- Slimscroll -->
            <script src="~/Content/bower_components/jquery-slimscroll/jquery.slimscroll.min.js"></script>
            <!-- FastClick -->
            <script src="~/Content/bower_components/fastclick/lib/fastclick.js"></script>
            <!-- AdminLTE App -->
            <script src="~/Content/dist/js/adminlte.min.js"></script>
            <!-- AdminLTE dashboard demo (This is only for demo purposes) -->
            <script src="~/Content/dist/js/pages/dashboard.js"></script>
            <!-- DataTables -->
            <script src="~/Content/bower_components/datatables.net/js/jquery.dataTables.min.js"></script>
            <script src="~/Content/bower_components/datatables.net-bs/js/dataTables.bootstrap.min.js"></script>

            @*//Peter tried to add this - 06/09/2022*@
            @*<script src="~/Content/bower_components/datatables.net/js/jquery-3.5.1.js"></script>
            <script src="~/Content/bower_components/datatables.net/js/jquery.dataTables.js"></script>
            <script src="~/Content/bower_components/datatables.net/js/jquery.dataTables.min.js"></script>*@

      

            <!-- AdminLTE for demo purposes -->
            @*<script src="dist/js/demo.js"></script>*@
            @RenderSection("scripts", required: false)

            <script>




                $(function () {
                    $('#example1').DataTable()
                    $('#example2').DataTable({
                        'paging': true,
                        'lengthChange': false,
                        'searching': false,
                        'ordering': true,
                        'info': true,
                        'autoWidth': false
                    })
                    /*
                    var d = document.getElementById("Division").value;
                    console.log(d);
                    if (!d)
                    {
                        $('#Department').prop('disabled', false);
                        console.log('inside');
                    }
                    else
                    {
                        $('#Department').prop('disabled', true);
                        console.log('outside');
                    }
                    */
                    /*
                    var e = document.getElementById("CategoryID");
                    console.log(e);
                    if (e) {
                        var selectedItem = e.options[e.selectedIndex].value;

                        if (selectedItem) {
                            GetSkillPerCatergoryForEdit();
                        }
                    }

                    var d = document.getElementById("SkillsID");
                    console.log(d);
                    if (d) {
                        var selectedSkill = d.options[d.selectedIndex].value;

                        if (selectedSkill) {
                            GetSkillPerCatergoryForEditSkill();
                        }
                    }
                    */
                })
            </script>
            <script>
                $(function () {
                    //Initialize Select2 Elements
                    $('.select2').select2()

                    //Datemask dd/mm/yyyy
                    $('#datemask').inputmask('dd/mm/yyyy', { 'placeholder': 'dd/mm/yyyy' })
                    //Datemask2 mm/dd/yyyy
                    $('#datemask2').inputmask('mm/dd/yyyy', { 'placeholder': 'mm/dd/yyyy' })
                    //Money Euro
                    $('[data-mask]').inputmask()

                    //Date range picker
                    $('#reservation').daterangepicker()
                    //Date range picker with time picker
                    $('#reservationtime').daterangepicker({ timePicker: true, timePickerIncrement: 30, format: 'MM/DD/YYYY h:mm A' })
                    //Date range as a button
                    $('#daterange-btn').daterangepicker(
                        {
                            ranges: {
                                'Today': [moment(), moment()],
                                'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                                'Last 7 Days': [moment().subtract(6, 'days'), moment()],
                                'Last 30 Days': [moment().subtract(29, 'days'), moment()],
                                'This Month': [moment().startOf('month'), moment().endOf('month')],
                                'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
                            },
                            startDate: moment().subtract(29, 'days'),
                            endDate: moment()
                        },
                        function (start, end) {
                            $('#daterange-btn span').html(start.format('MMMM D, YYYY') + ' - ' + end.format('MMMM D, YYYY'))
                        }
                    )

                    //Date picker
                    $('#datepicker').datepicker({
                        autoclose: true
                    })

                    //iCheck for checkbox and radio inputs
                    $('input[type="checkbox"].minimal, input[type="radio"].minimal').iCheck({
                        checkboxClass: 'icheckbox_minimal-blue',
                        radioClass: 'iradio_minimal-blue'
                    })
                    //Red color scheme for iCheck
                    $('input[type="checkbox"].minimal-red, input[type="radio"].minimal-red').iCheck({
                        checkboxClass: 'icheckbox_minimal-red',
                        radioClass: 'iradio_minimal-red'
                    })
                    //Flat red color scheme for iCheck
                    $('input[type="checkbox"].flat-red, input[type="radio"].flat-red').iCheck({
                        checkboxClass: 'icheckbox_flat-green',
                        radioClass: 'iradio_flat-green'
                    })

                    //Colorpicker
                    $('.my-colorpicker1').colorpicker()
                    //color picker with addon
                    $('.my-colorpicker2').colorpicker()

                    //Timepicker
                    $('.timepicker').timepicker({
                        showInputs: false
                    })
                })
            </script>

            <!--Barash-->
            <script>
        //var sessServerAliveTime = 1 * 6 * 2;
        //            var sessionTimeout = 10 * 600;
        var sessServerAliveTime = 10 * 60 * 2;
        var sessionTimeout = 5 * 60000;
                    var sessLastActivity;

                    var idleTimer, remainingTimer;

                    var isTimout = false;

                    var sess_intervalID, idleIntervalID;
                    var sess_lastActivity;
                    var timer;
                    var isIdleTimerOn = false;
                    localStorage.setItem('sessionSlide', 'isStarted');

                    function sessPingServer() {
                        if (!isTimout) {
                            //$.ajax({
                            //    url: '/Admin/SessionTimeout',
                            //    dataType: "json",
                            //    async: false,
                            //    type: "POST"
                            //});

                            return true;
                        }
                    }

                    function sessServerAlive() {
                        sess_intervalID = setInterval('sessPingServer()', sessServerAliveTime);
                    }

                    function initSessionMonitor() {
                        $(document).bind('keypress.session', function (ed, e) {
                            sessKeyPressed(ed, e);
                        });
                        $(document).bind('mousedown keydown', function (ed, e) {

                            sessKeyPressed(ed, e);
                        });
                        sessServerAlive();
                        startIdleTime();
                    }

                    $(window).scroll(function (e) {
                        localStorage.setItem('sessionSlide', 'isStarted');
                        startIdleTime();
                    });

                    function sessKeyPressed(ed, e) {
                        var target = ed ? ed.target : window.event.srcElement;
                        var sessionTarget = $(target).parents("#session-expire-warning-modal").length;

                        if (sessionTarget != null && sessionTarget != undefined) {
                            if (ed.target.id != "btnSessionExpiredCancelled" && ed.target.id != "btnSessionModal" && ed.currentTarget.activeElement.id != "session-expire-warning-modal" && ed.target.id != "btnExpiredOk"
                                && ed.currentTarget.activeElement.className != "modal fade modal-overflow in" && ed.currentTarget.activeElement.className != 'modal-header'
                                && sessionTarget != 1 && ed.target.id != "session-expire-warning-modal") {
                                localStorage.setItem('sessionSlide', 'isStarted');
                                startIdleTime();
                            }
                        }
                    }

                    function startIdleTime() {
                        stopIdleTime();
                        localStorage.setItem("sessIdleTimeCounter", $.now());
                        idleIntervalID = setInterval('checkIdleTimeout()', 1000);
                        isIdleTimerOn = false;
                    }

                    var sessionExpired = document.getElementById("session-expired-modal");

                    function sessionExpiredClicked(evt) {

                        //var so = '@System.Configuration.ConfigurationManager.AppSettings["LogoutURL"].ToString()';
                        $.post('@Url.Action("GoToPortal", "Account")', function (data) {
                            window.location = data.url;
                        });
                        //window.location.href = '/Account/GoToPortal/';
                        //window.location = so;

                    }
                    //$(document).ready(function () {

                    //    alert("idididi");
                    //    CheckBox();

                    //});

                    sessionExpired.addEventListener("click", sessionExpiredClicked, false);
                    function stopIdleTime() {
                        clearInterval(idleIntervalID);
                        clearInterval(remainingTimer);
                    }

                    function checkIdleTimeout() {
                        // $('#sessionValue').val() * 60000;
                        var idleTime = (parseInt(localStorage.getItem('sessIdleTimeCounter')) + (sessionTimeout));
                        if ($.now() > idleTime + 60000) {
                            $("#session-expire-warning-modal").modal('hide');
                            $("#session-expired-modal").modal('show');
                            clearInterval(sess_intervalID);
                            clearInterval(idleIntervalID);

                            $('.modal-backdrop').css("z-index", parseInt($('.modal-backdrop').css('z-index')) + 100);
                            $("#session-expired-modal").css('z-index', 2000);
                            $('#btnExpiredOk').css('background-color', '#428bca');
                            $('#btnExpiredOk').css('color', '#fff');

                            isTimout = true;

                            sessLogOut();

                        }
                        else if ($.now() > idleTime) {
                            ////var isDialogOpen = $("#session-expire-warning-modal").is(":visible");
                            if (!isIdleTimerOn) {
                                ////alert('Reached idle');
                                localStorage.setItem('sessionSlide', false);
                                countdownDisplay();

                                $('.modal-backdrop').css("z-index", parseInt($('.modal-backdrop').css('z-index')) + 500);
                                $('#session-expire-warning-modal').css('z-index', 1500);
                                $('#btnOk').css('background-color', '#428bca');
                                $('#btnOk').css('color', '#fff');
                                $('#btnSessionExpiredCancelled').css('background-color', '#428bca');
                                $('#btnSessionExpiredCancelled').css('color', '#fff');
                                $('#btnLogoutNow').css('background-color', '#428bca');
                                $('#btnLogoutNow').css('color', '#fff');

                                $("#seconds-timer").empty();
                                $("#session-expire-warning-modal").modal('show');


                                isIdleTimerOn = true;
                            }
                        }
                    }

                    $("#btnSessionExpiredCancelled").click(function () {
                        $('.modal-backdrop').css("z-index", parseInt($('.modal-backdrop').css('z-index')) - 500);
                    });

                    $("#btnOk").click(function () {
                        $("#session-expire-warning-modal").modal('hide');
                        $('.modal-backdrop').css("z-index", parseInt($('.modal-backdrop').css('z-index')) - 500);
                        startIdleTime();
                        clearInterval(remainingTimer);
                        localStorage.setItem('sessionSlide', 'isStarted');
                    });

                    $("#btnLogoutNow").click(function () {

                        localStorage.setItem('sessionSlide', 'loggedOut');

                        //var so = '@System.Configuration.ConfigurationManager.AppSettings["LogoutURL"].ToString()';
                        $.post('@Url.Action("GoToPortal", "Account")', function (data) {
                            window.location = data.url;
                        });
                        //window.location = so;
                        //window.location.href = '/Account/GoToPortal/';
                        //sessLogOut();
                        $("#session-expired-modal").modal('hide');
                    });

                    $('#session-expired-modal').on('shown.bs.modal', function () {
                        $("#session-expire-warning-modal").modal('hide');
                        $(this).before($('.modal-backdrop'));
                        $(this).css("z-index", parseInt($('.modal-backdrop').css('z-index')) + 1);
                    });

                    $("#session-expired-modal").on("hidden.bs.modal", function () {

                        //var so = '@System.Configuration.ConfigurationManager.AppSettings["LogoutURL"].ToString()';
                        $.post('@Url.Action("GoToPortal", "Account")', function (data) {
                            window.location = data.url;
                        });
                        //window.location = so;
                        window.location.href = '/Account/GoToPortal/';
                    });

                    $('#session-expire-warning-modal').on('shown.bs.modal', function () {
                        $("#session-expire-warning-modal").modal('show');
                        $(this).before($('.modal-backdrop'));
                        $(this).css("z-index", parseInt($('.modal-backdrop').css('z-index')) + 1);
                    });

                    function countdownDisplay() {

                        var dialogDisplaySeconds = 60;

                        remainingTimer = setInterval(function () {
                            if (localStorage.getItem('sessionSlide') == "isStarted") {
                                $("#session-expire-warning-modal").modal('hide');
                                startIdleTime();
                                clearInterval(remainingTimer);
                            }
                            else if (localStorage.getItem('sessionSlide') == "loggedOut") {
                                $("#session-expire-warning-modal").modal('hide');
                                $("#session-expired-modal").modal('show');
                            }
                            else {

                                $('#seconds-timer').html(dialogDisplaySeconds);
                                dialogDisplaySeconds -= 1;
                            }
                        }
                            , 1000);
                    };

                    function sessLogOut() {
                        //var so = '@System.Configuration.ConfigurationManager.AppSettings["LogoutURL"].ToString()';
                        //window.location = so;
                        //window.location.href = '/Account/GoToPortal/';
                        $.post('@Url.Action("GoToPortal", "Account")', function (data) {
                            window.location = data.url;
                        });
                    }

            </script>

            <script type="text/javascript">
                initSessionMonitor();
            </script>
            <!--This script is only for show cound down timer on HTML Page -->
            <script type="text/javascript">
                window.onload = function () {
                    (function () {
                        var counter = 60;
                        setInterval(function () {
                            counter--;
                            if (counter >= 0) {
                                span = document.getElementById("count");
                                span.innerHTML = counter;
                            }
                            if (counter === 0) {
                                clearInterval(counter);
                            }
                        }, 1000);
                    })();
                }
            </script>
            <!--end-->

        </body>
    </html>
