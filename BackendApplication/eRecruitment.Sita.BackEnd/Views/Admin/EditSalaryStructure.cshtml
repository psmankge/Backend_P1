@model IEnumerable<eRecruitment.BusinessDomain.DAL.Entities.AppModels.SalaryStructureModel>
<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <h1>
            Manage Salary Structure
        </h1>
        <ol class="breadcrumb">
            <li><a href="#"><i class="fa fa-wrench"></i> Administration</a></li>
            <li><a href="~/Admin/SalaryStructureList">Manage Salary Structure</a></li>
            <li class="active">Edit Salary Structure</li>
        </ol>
    </section>
    <!-- Main content -->
    <section class="content">
        <!-- Default box -->
        <div class="box">
            <div class="box-header with-border">
                <h3 class="box-title">Edit Salary Structure</h3>
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip"
                            title="Collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                    <button type="button" class="btn btn-box-tool" data-widget="remove" disabled data-toggle="tooltip" title="Remove">
                        <i class="fa fa-times"></i>
                    </button>
                </div>
            </div>
            <div class="box-body">
                @foreach (var item in Model)
                {
                    using (Html.BeginForm("EditSalaryStructure", "Admin", FormMethod.Post, new { @class = "form-horizontal sallStrForm", role = "form", enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary("", new { @class = "text-danger" })
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <div class="col-md-12">
                                        <label>Organisation Name:</label>
                                        @if (ViewBag.Organisation != null)
                                        {
                                            foreach (var d in ViewBag.Organisation)
                                            {
                                                <div class="form-control" readonly>
                                                    <label>
                                                        <input type="text"
                                                               name="Organisation"
                                                               hidden value="@d.OrganisationID" /> @d.OrganisationName
                                                        </label>
                                                    </div>
                                                }
                                            }
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-md-12">
                                        <label>Job Title:</label>
                                        @Html.DropDownListFor(Model => @item.JobTitleID, new SelectList(ViewBag.JobTitle, "JobTitleID", "JobTitle", @item.JobTitleID), "--Select Job Title --", new { @class = "form-control select2", required = "Required", tabindex = 1 })
                                    </div>

                                </div>

                                <div class="form-group">
                                    <div class="col-md-12">
                                        <label>Salary Category:</label>
                                        @Html.DropDownListFor(Model => @item.SalaryCategoryID, new SelectList(ViewBag.SalaryCategory, "SalaryCategoryID", "CategoryDescr", @item.SalaryCategoryID), "--Select Salary Category --", new { @id = "SalaryCategoryID", @class = "form-control", required = "Required", tabindex = 1, onChange = "SalarySubCategoryForEdit()" })
                                    </div>

                                </div>

                                <div class="form-group">
                                    <div class="col-md-12">
                                        <label>Salary Sub-Category:<span class="required" style="color:red;"> * </span></label>
                                        @Html.DropDownListFor(Model => @item.SalarySubCategoryID, new SelectList(ViewBag.SalarySubCategory, "SalarySubCategoryID", "Descr", @item.SalarySubCategoryID), "--Select Salary Sub-Category --", new { @id = "SalarySubCategoryID", @class = "form-control", required = "Required", tabindex = 1 })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-md-12">
                                        <label>Job Level:<span class="required" style="color:red;"> * </span></label>
                                        @Html.DropDownListFor(Model => @item.JobLevelID, new SelectList(ViewBag.JobLevel, "JobLevelID", "JobLevelName", @item.JobLevelID), "--Select Job Level --", new { @class = "form-control ", required = "Required", tabindex = 1 })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-md-6">
                                        <label> Minimum Value:<span class="required" style="color:red;"> * </span> (eg. 9999,99)</label>
                                        @Html.TextBoxFor(Model => @item.MinValue, new { @class = "form-control testCurrency", placeholder = " Minimum Value", required = "Required", tabindex = 2, onblur="return trySubmit(event);" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-6">
                                        <label> Maximum Value:<span class="required" style="color:red;"> * </span> (eg. 9999,99)</label>
                                        @Html.TextBoxFor(Model => @item.MaxValue, new { @class = "form-control", placeholder = "  Maximum Value", required = "Required", tabindex = 2, onblur="return trySubmit(event);" })
                                    </div>
                                </div>
                                <div class="clearfix"></div><br />
                                <div class="col-md-12 pull-right">
                                    <input type="submit" class="btn btn-success submiting" value="Save" /> |
                                    <a href="@Url.Action("SalaryStructureList", "Admin")" onclick="return confirm('Are you sure you want to cancel?')" type="button" class="btn btn-danger">
                                        Cancel
                                    </a>
                                </div>
                            </div>
                        </div>

                    }
                }
            </div>
            <!-- /.box-body -->
            <div class="box-footer">
                &nbsp;
            </div>
            <!-- /.box-footer-->
        </div>
        <!-- /.box -->
    </section>
    <!-- /.content -->
</div>
<!-- /.content-wrapper -->

<script src="~/Scripts/DropDownListValues.js"></script>

<script>
    function trySubmit(evt) {
    //var e = evt || window.event;
    //var charCode = (evt.which) ? evt.which : evt.keyCode
    //if (charCode != 46 && charCode > 31
    //    && (charCode < 48 || charCode > 57))
    //    return false;
    //return true;
    var preVal = evt.target.defaultValue;
    var data = evt.target.value;
    var patt = new RegExp('^[0-9]+(?:\,[0-9]{2})?$');
    if (!patt.test(data)) {
        evt.target.value = preVal;
    }
        
}

</script>